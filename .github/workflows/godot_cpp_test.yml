name: ðŸª² Blazium CPP
on:
  workflow_call:

# Global Settings
env:
  # Used for the cache key. Add version suffix to force clean build.
  BLAZIUM_BASE_BRANCH: blazium-dev
  # Used for the blazium-cpp checkout.
  BLAZIUM_CPP_BRANCH: blazium-dev

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-cpp-tests
  cancel-in-progress: true

jobs:
  blazium-cpp-tests:
    runs-on: "ubuntu-20.04"
    name: "Build and test Blazium CPP"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      # Checkout blazium-cpp
      - name: Checkout blazium-cpp
        uses: actions/checkout@v4
        with:
          repository: blazium-engine/blazium-cpp
          ref: ${{ env.BLAZIUM_CPP_BRANCH }}
          submodules: 'recursive'
          path: 'blazium-cpp'

      # Download generated API dump
      - name: Download GDExtension interface and API dump
        uses: ./.github/actions/download-artifact
        with:
          name: 'blazium-api-dump'
          path: './blazium-api'

      # Extract and override existing files with generated files
      - name: Extract GDExtension interface and API dump
        run: |
          cp -f blazium-api/gdextension_interface.h blazium-cpp/gdextension/
          cp -f blazium-api/extension_api.json blazium-cpp/gdextension/

      # TODO: Add caching to the SCons build and store it for CI via the godot-cache
      # action.

      # Build godot-cpp test extension
      - name: Build blazium-cpp test extension
        run: |
          cd blazium-cpp/test
          scons target=template_debug dev_build=yes
          cd ../..

  gdextension-c-compile:
    runs-on: "ubuntu-20.04"
    name: "Check GDExtension header with a C compiler"
    steps:
      - uses: actions/checkout@v4

      - name: "Run C compiler on gdextension_interface.h"
        run: |
          gcc -c core/extension/gdextension_interface.h
